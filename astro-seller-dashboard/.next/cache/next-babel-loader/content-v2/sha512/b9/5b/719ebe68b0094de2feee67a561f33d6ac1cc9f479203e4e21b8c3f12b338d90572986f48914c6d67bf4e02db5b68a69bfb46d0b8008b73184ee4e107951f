{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Astro Bazar\\\\martfury-admin-react\\\\pages\\\\register.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst RegistrationForm = () => {\n  // Use the useRouter hook to get the router object\n  const router = useRouter(); // State to store the values of the input fields\n\n  const [formData, setFormData] = React.useState({\n    // firstName: '',\n    // lastName: '',\n    username: '',\n    email: '',\n    password: '' // id: '',\n    // phone: ''\n\n  }); // Event handler for when the form is submitted\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Send a request to the server to register the user with the provided information\n\n    fetch('http://localhost:5000/Astro/seller/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // Handle the response from the server\n      console.log(data['username']);\n\n      if (data['username']) {\n        // Registration was successful, redirect the user to the home page\n        router.push('/login');\n      } else {\n        // Show an error message\n        alert(\"There is a problem\");\n      }\n    });\n  }; // Event handler for when the input values are changed\n\n\n  const handleChange = event => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RegisterForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"register-logo\",\n        src: \"/img/logo.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"register-label-main\",\n        children: \"Seller Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"id\",\n        children: \"CNIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"id\",\n        value: formData.id,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"register-label\",\n        htmlFor: \"id\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"phone\",\n        value: formData.phone,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/login\",\n        children: \" Already have an account? Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Astro Bazar/martfury-admin-react/pages/register.jsx"],"names":["React","useRouter","Link","RegistrationForm","router","formData","setFormData","useState","username","email","password","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","push","alert","handleChange","target","name","value","id","phone"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\n\r\nconst RegistrationForm = () => {\r\n  // Use the useRouter hook to get the router object\r\n  const router = useRouter();\r\n\r\n  // State to store the values of the input fields\r\n  const [formData, setFormData] = React.useState({\r\n    // firstName: '',\r\n    // lastName: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    // id: '',\r\n    // phone: ''\r\n  });\r\n\r\n  // Event handler for when the form is submitted\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Send a request to the server to register the user with the provided information\r\n\r\n    fetch('http://localhost:5000/Astro/seller/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle the response from the server\r\n        console.log(data['username'])\r\n        if (data['username']) {\r\n          // Registration was successful, redirect the user to the home page\r\n          router.push('/login');\r\n        } else {\r\n          // Show an error message\r\n          alert(\"There is a problem\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // Event handler for when the input values are changed\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n    <form className='RegisterForm' onSubmit={handleSubmit}>\r\n      {/* <label htmlFor=\"firstName\">First name:</label>\r\n      <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} />\r\n\r\n      <label htmlFor=\"lastName\">Last name:</label>\r\n      <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} /> */}\r\n      <img className='register-logo' src=\"/img/logo.png\" alt=\"\" /> <h3 className='register-label-main'>Seller Dashboard</h3>\r\n\r\n      <label className='register-label' htmlFor=\"username\">Username</label>\r\n      <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} />\r\n\r\n      <label className='register-label' htmlFor=\"email\">Email</label>\r\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n\r\n      <label className='register-label' htmlFor=\"password\">Password</label>\r\n      <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n\r\n      <label className='register-label' htmlFor=\"id\">CNIC</label>\r\n      <input type=\"number\" name=\"id\" value={formData.id} onChange={handleChange} />\r\n     <label className='register-label' htmlFor=\"id\">Phone</label>\r\n      <input type=\"number\" name=\"phone\" value={formData.phone} onChange={handleChange} />\r\n      <button type=\"submit\">Sign Up</button>\r\n      <Link href='/login'> Already have an account? Login </Link>\r\n      </form>\r\n    </div>\r\n    \r\n  )\r\n  }\r\n\r\n  export default RegistrationForm;"]},"metadata":{},"sourceType":"module"}