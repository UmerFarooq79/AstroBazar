{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"F:/codes/Web Development/AstroBazar/astrobazar/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:/codes/Web Development/AstroBazar/astrobazar/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"F:\\\\codes\\\\Web Development\\\\AstroBazar\\\\astrobazar\\\\martfury-admin-react\\\\pages\\\\login.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  // Use the useRouter hook to get the router object\n  var router = useRouter(); // State to store the values of the input fields\n\n  var _React$useState = React.useState({\n    username: '',\n    password: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setFormData = _React$useState2[1]; // Event handler for when the form is submitted\n\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault(); // Send a request to the server to log in the user with the provided credentials\n    // Note: this is just an example and will not work as-is\n\n    fetch('http://localhost:5000/Astro/seller/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      response.json();\n      console.log(response.json());\n    }).then(function (data) {\n      // Handle the response from the server\n      console.log(data);\n\n      if (data) {\n        // Login was successful, redirect the user to the home page\n        router.push('/register');\n      } else {\n        // Show an error message\n        alert(\"error\");\n      }\n    });\n  }; // Event handler for when the input values are changed\n\n\n  var handleChange = function handleChange(event) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: formData.username,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/register\",\n      children: \" Don't have an account? Sigh Up \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginForm, \"rmtek+KxqwHzmtk6hqrxS06IbAw=\", false, function () {\n  return [useRouter];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["F:/codes/Web Development/AstroBazar/astrobazar/martfury-admin-react/pages/login.jsx"],"names":["React","useRouter","Link","LoginForm","router","useState","username","password","formData","setFormData","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","json","console","log","data","push","alert","handleChange","target","name","value"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB;AACA,MAAMC,MAAM,GAAGH,SAAS,EAAxB,CAFsB,CAItB;;AAJsB,wBAKUD,KAAK,CAACK,QAAN,CAAe;AAC7CC,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,QAAQ,EAAE;AAFmC,GAAf,CALV;AAAA;AAAA,MAKfC,QALe;AAAA,MAKLC,WALK,wBAUtB;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CAG9B;AACA;;AACAC,IAAAA,KAAK,CAAC,+CAAD,EAAkD;AACrDC,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAF+C;AAGrDU,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH4C,KAAlD,CAAL,CAOGC,IAPH,CAOQ,UAACC,QAAD,EAAc;AAClBA,MAAAA,QAAQ,CAACC,IAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,EAAZ;AACH,KAVD,EAWGF,IAXH,CAWQ,UAACK,IAAD,EAAU;AACd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACR;AACApB,QAAAA,MAAM,CAACqB,IAAP,CAAY,WAAZ;AACD,OAHD,MAGO;AACL;AACAC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,KArBH;AAsBD,GA3BD,CAXsB,CAwCtB;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAChB,KAAD,EAAW;AAC9BF,IAAAA,WAAW,iCACND,QADM,2BAERG,KAAK,CAACiB,MAAN,CAAaC,IAFL,EAEYlB,KAAK,CAACiB,MAAN,CAAaE,KAFzB,GAAX;AAID,GALD;;AAOA,sBACE;AAAM,IAAA,QAAQ,EAAEpB,YAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAEF,QAAQ,CAACF,QAAnD;AAA6D,MAAA,QAAQ,EAAEqB;AAAvE;AAAA;AAAA;AAAA;AAAA,aAFF,eAIE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAEnB,QAAQ,CAACD,QAAvD;AAAiE,MAAA,QAAQ,EAAEoB;AAA3E;AAAA;AAAA;AAAA;AAAA,aALF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA5DD;;GAAMxB,S;UAEWF,S;;;KAFXE,S;AA8DN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nconst LoginForm = () => {\r\n  // Use the useRouter hook to get the router object\r\n  const router = useRouter();\r\n\r\n  // State to store the values of the input fields\r\n  const [formData, setFormData] = React.useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  // Event handler for when the form is submitted\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Send a request to the server to log in the user with the provided credentials\r\n    // Note: this is just an example and will not work as-is\r\n    fetch('http://localhost:5000/Astro/seller/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then((response) => {\r\n        response.json();\r\n        console.log(response.json())\r\n    })\r\n      .then((data) => {\r\n        // Handle the response from the server\r\n        console.log(data)\r\n        if (data) {\r\n          // Login was successful, redirect the user to the home page\r\n          router.push('/register');\r\n        } else {\r\n          // Show an error message\r\n          alert(\"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // Event handler for when the input values are changed\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} />\r\n\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n\r\n      <button type=\"submit\">Log In</button>\r\n      <Link href='/register'> Don't have an account? Sigh Up </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}