{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Astro Bazar\\\\martfury-admin-react\\\\pages\\\\login.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst LoginForm = () => {\n  // Use the useRouter hook to get the router object\n  const router = useRouter(); // State to store the values of the input fields\n\n  const [formData, setFormData] = React.useState({\n    username: '',\n    password: ''\n  }); // Event handler for when the form is submitted\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:5000/Astro/seller/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // Handle the response from the server\n      console.log(data['username']);\n\n      if (data['username']) {\n        // Login was successful, redirect the user to the home page\n        router.push('/home');\n      } else {\n        // Show an error message\n        alert(\"error\");\n      }\n    });\n  }; // Event handler for when the input values are changed\n\n\n  const handleChange = event => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"LoginForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"login-input\",\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"login-label\",\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"login-input\",\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"register-link\",\n        href: \"/register\",\n        children: \" Don't have an account? Sigh Up \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Astro Bazar/martfury-admin-react/pages/login.jsx"],"names":["React","useRouter","Link","LoginForm","router","formData","setFormData","useState","username","password","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","push","alert","handleChange","target","name","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAMC,MAAM,GAAGH,SAAS,EAAxB,CAFsB,CAItB;;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe;AAC7CC,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,QAAQ,EAAE;AAFmC,GAAf,CAAhC,CALsB,CAUtB;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,KAAK,CAAC,+CAAD,EAAkD;AACrDC,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAF+C;AAGrDa,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH4C,KAAlD,CAAL,CAIIC,IAJJ,CAIUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJvB,EAKGF,IALH,CAKSG,IAAD,IAAU;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,UAAD,CAAhB;;AACA,UAAIA,IAAI,CAAC,UAAD,CAAR,EAAsB;AACpB;AACAlB,QAAAA,MAAM,CAACqB,IAAP,CAAY,OAAZ;AACD,OAHD,MAGO;AACL;AACAC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,KAfH;AAgBD,GAnBD,CAXsB,CAgCtB;;;AACA,QAAMC,YAAY,GAAIhB,KAAD,IAAW;AAC9BL,IAAAA,WAAW,iCACND,QADM;AAET,OAACM,KAAK,CAACiB,MAAN,CAAaC,IAAd,GAAqBlB,KAAK,CAACiB,MAAN,CAAaE;AAFzB,OAAX;AAID,GALD;;AAOA,sBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACA;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA2B,MAAA,QAAQ,EAAEpB,YAArC;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA8B,QAAA,IAAI,EAAC,MAAnC;AAA0C,QAAA,IAAI,EAAC,UAA/C;AAA0D,QAAA,KAAK,EAAEL,QAAQ,CAACG,QAA1E;AAAoF,QAAA,QAAQ,EAAEmB;AAA9F;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,IAAI,EAAC,UAApC;AAA+C,QAAA,IAAI,EAAC,UAApD;AAA+D,QAAA,KAAK,EAAEtB,QAAQ,CAACI,QAA/E;AAAyF,QAAA,QAAQ,EAAEkB;AAAnG;AAAA;AAAA;AAAA;AAAA,cALF,eAOE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,IAAI,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CAxDD;;AA0DA,eAAexB,SAAf","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nconst LoginForm = () => {\r\n  // Use the useRouter hook to get the router object\r\n  const router = useRouter();\r\n\r\n  // State to store the values of the input fields\r\n  const [formData, setFormData] = React.useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  // Event handler for when the form is submitted\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch('http://localhost:5000/Astro/seller/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(formData),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    }) .then((response) => response.json() )\r\n      .then((data) => {\r\n        // Handle the response from the server\r\n        console.log(data['username'])\r\n        if (data['username']) {\r\n          // Login was successful, redirect the user to the home page\r\n          router.push('/home');\r\n        } else {\r\n          // Show an error message\r\n          alert(\"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // Event handler for when the input values are changed\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n    <div className='login-container'>\r\n    <form className='LoginForm'onSubmit={handleSubmit}>\r\n      <label className='login-label' htmlFor=\"username\">Username:</label>\r\n      <input className='login-input'type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} />\r\n\r\n      <label className='login-label' htmlFor=\"password\">Password:</label>\r\n      <input className='login-input' type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n\r\n      <button className='login-button' type=\"submit\">Log In</button>\r\n      <Link className='register-link' href='/register'> Don't have an account? Sigh Up </Link>\r\n    </form>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}