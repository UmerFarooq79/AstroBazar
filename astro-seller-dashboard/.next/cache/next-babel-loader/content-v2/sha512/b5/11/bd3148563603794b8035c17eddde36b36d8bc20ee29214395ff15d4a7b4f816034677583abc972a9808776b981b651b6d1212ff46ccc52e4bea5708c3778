{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\codes\\\\Web Development\\\\AstroBazar\\\\astrobazar\\\\martfury-admin-react\\\\components\\\\elements\\\\basic\\\\Pagination.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst Pagination = () => {\n  // Declare state variables to store the products and the current page\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1); // Fetch the products from the API when the component mounts\n\n  useEffect(() => {\n    fetch('http://localhost:5000/Astro/seller/users/').then(response => response.json()).then(data => {\n      // Set the products in the state\n      setProducts(data);\n    });\n  }, []); // Divide the products into pages based on the desired number of products per page\n\n  const productsPerPage = 10;\n  const pages = Math.ceil(products.length / productsPerPage);\n  const startIndex = (currentPage - 1) * productsPerPage;\n  const displayedProducts = products.slice(startIndex, startIndex + productsPerPage); // Function to handle pagination\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handlePageChange(currentPage - 1),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon icon-chevron-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), [...Array(pages)].map((_, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage === i + 1 ? 'active' : '',\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handlePageChange(i + 1),\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)), currentPage < pages && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-chevron-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Pagination;","map":{"version":3,"sources":["F:/codes/Web Development/AstroBazar/astrobazar/martfury-admin-react/components/elements/basic/Pagination.jsx"],"names":["React","useState","useEffect","Pagination","products","setProducts","currentPage","setCurrentPage","fetch","then","response","json","data","productsPerPage","pages","Math","ceil","length","startIndex","displayedProducts","slice","handlePageChange","page","Array","map","_","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,CAAD,CAA9C,CAHuB,CAKvB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACAP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT,CANuB,CAevB;;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUZ,QAAQ,CAACa,MAAT,GAAkBJ,eAA5B,CAAd;AACA,QAAMK,UAAU,GAAG,CAACZ,WAAW,GAAG,CAAf,IAAoBO,eAAvC;AACA,QAAMM,iBAAiB,GAAGf,QAAQ,CAACgB,KAAT,CAAeF,UAAf,EAA2BA,UAAU,GAAGL,eAAxC,CAA1B,CAnBuB,CAqBvB;;AACA,QAAMQ,gBAAgB,GAAIC,IAAD,IAAU;AACjCf,IAAAA,cAAc,CAACe,IAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,2BAOE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,iBAEGhB,WAAW,GAAG,CAAd,iBACC;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAMe,gBAAgB,CAACf,WAAW,GAAG,CAAf,CAAlC;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHJ,EAUG,CAAC,GAAGiB,KAAK,CAACT,KAAD,CAAT,EAAkBU,GAAlB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,kBACrB;AAAgB,QAAA,SAAS,EAAEpB,WAAW,KAAKoB,CAAC,GAAG,CAApB,GAAwB,QAAxB,GAAmC,EAA9D;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAML,gBAAgB,CAACK,CAAC,GAAG,CAAL,CAAlC;AAAA,oBAA4CA,CAAC,GAAG;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,CAAC,GAAG,CAAb;AAAA;AAAA;AAAA;AAAA,cADD,CAVH,EAgBGpB,WAAW,GAAGQ,KAAd,iBACC;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,MAAMO,gBAAgB,CAACf,WAAW,GAAG,CAAf,CAAlC;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA5DD;;AA8DA,eAAeH,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Pagination = () => {\n  // Declare state variables to store the products and the current page\n  const [products, setProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Fetch the products from the API when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/Astro/seller/users/')\n      .then((response) => response.json())\n      .then((data) => {\n        // Set the products in the state\n        setProducts(data);\n      });\n  }, []);\n\n  // Divide the products into pages based on the desired number of products per page\n  const productsPerPage = 10;\n  const pages = Math.ceil(products.length / productsPerPage);\n  const startIndex = (currentPage - 1) * productsPerPage;\n  const displayedProducts = products.slice(startIndex, startIndex + productsPerPage);\n\n  // Function to handle pagination\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div>\n      {/* Display the products */}\n      {/* {displayedProducts.map((product) => (\n        <div key={product.id}>{product.name}</div>\n      ))} */}\n\n      {/* Pagination */}\n      <ul className=\"pagination\">\n        {/* Previous button */}\n        {currentPage > 1 && (\n          <li>\n            <a onClick={() => handlePageChange(currentPage - 1)}>\n              <i className=\"icon icon-chevron-left\"></i>\n            </a>\n          </li>\n        )}\n        {/* Page buttons */}\n        {[...Array(pages)].map((_, i) => (\n          <li key={i + 1} className={currentPage === i + 1 ? 'active' : ''}>\n            <a onClick={() => handlePageChange(i + 1)}>{i + 1}</a>\n          </li>\n        ))}\n        {/* Next button */}\n        {currentPage < pages && (\n          <li>\n            <a onClick={() => handlePageChange(currentPage + 1)}>\n              <i className=\"icon-chevron-right\"></i>\n            </a>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}