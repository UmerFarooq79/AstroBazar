{"ast":null,"code":"import _toConsumableArray from \"D:/Web Development/Martfury/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nimport { createWrapper } from 'next-redux-wrapper';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (false) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nexport var makeStore = function makeStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(rootReducer, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport var wrapper = createWrapper(makeStore, {\n  debug: false\n});\n/*\nconst persistConfig = {\n    key: 'martfury',\n    storage,\n    whitelist: ['cart', 'compare', 'auth', 'wishlist'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nfunction configureStore(initialState) {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        persistedReducer,\n        initialState,\n        bindMiddleware([sagaMiddleware])\n    );\n\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n}\n\nexport default configureStore;\n*/","map":null,"metadata":{},"sourceType":"module"}